{
  "extends": [
    "next",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:storybook/recommended"
  ],
  "env": {
    "es6": true
  },
  "plugins": [
    "simple-import-sort",
    "@typescript-eslint",
    "unused-imports"
  ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins.
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          // Also, put `react-icons` in sorting order not with `react`
          [
            "^react(?!-.)$",
            "^\\w",
            "^@\\w"
          ],
          // The Chakra theme directory if imported to story file or other places
          [
            "^@/@chakra-ui"
          ],
          // From the `types` directory.
          [
            "^@/lib/types",
            "^@/lib/interfaces"
          ],
          // From the `components` directory.
          [
            "^@/components"
          ],
          // From the `utils` directory.
          [
            "^@/lib/utils"
          ],
          // From the `data` directory.
          [
            "^@/data"
          ],
          // From the `constants` directory.
          [
            "^@/lib/constants"
          ],
          // Parent imports. Put `..` last.
          [
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$"
          ],
          // Other relative imports. Put same-folder imports and `.` last.
          [
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$"
          ],
          // Style imports.
          [
            "^.+\\.s?css$"
          ],
          // Side effect imports.
          [
            "^\\u0000"
          ]
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      /**
        * Per a preferred convention used, we use an underscore
        * or variable name prefixed with an underscore to denote an
        * argument not being used in a callback function.
        * This rule ignores all args that begin with an underscore.
        *
        * i.e. `arrObj.map((_, index) => index + 1)`
        * The first argument of `value` is not used.
        */
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "fixToUnknown": true
      }
    ],
    "unused-imports/no-unused-imports-ts": 2
  }
}
